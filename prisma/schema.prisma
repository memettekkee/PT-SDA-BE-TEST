// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  fullname  String
  gender    String?
  birth     DateTime?
  address   String?
  phone     String?
  avatar    String?
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  merchants Merchant[]

  @@map("users")
}

model Merchant {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  name      String
  address   String?
  phone     String?
  avatar    String?
  type      String?
  status    String    @default("active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]

  @@map("merchants")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  type      String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[]

  @@map("categories")
}

model Colour {
  id              String           @id @default(uuid())
  name            String
  hex             String?
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  variantProducts VariantProduct[]

  @@map("colours")
}

model Size {
  id              String           @id @default(uuid())
  name            String
  length          Float?
  height          Float?
  width           Float?
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  variantProducts VariantProduct[]

  @@map("sizes")
}

model Product {
  id              String           @id @default(uuid())
  merchantId      String           @map("merchant_id")
  categoryId      String?          @map("category_id")
  name            String
  price           Float
  discount        Float?           @default(0)
  description     String?
  has_variant     Boolean          @default(false)
  weight          Float?
  avatar          String?
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  merchant        Merchant         @relation(fields: [merchantId], references: [id])
  category        Category?        @relation(fields: [categoryId], references: [id])
  variantProducts VariantProduct[]

  @@map("products")
}

model VariantProduct {
  id         String   @id @default(uuid())
  productId  String   @map("product_id")
  colourId   String?  @map("colour_id")
  sizeId     String?  @map("size_id")
  sku        String   @unique
  stock      Int      @default(0)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  product    Product  @relation(fields: [productId], references: [id])
  colour     Colour?  @relation(fields: [colourId], references: [id])
  size       Size?    @relation(fields: [sizeId], references: [id])

  @@map("variant_products")
}
